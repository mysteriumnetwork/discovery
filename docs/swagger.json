{
    "swagger": "2.0",
    "info": {
        "description": "Discovery API for Mysterium Network",
        "title": "Discovery API",
        "contact": {},
        "version": "3.0"
    },
    "basePath": "/api/v3",
    "paths": {
        "/countries": {
            "get": {
                "description": "List number of providers in each country",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "countries"
                ],
                "summary": "List number of providers in each country",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consumer country",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Provider ID",
                        "name": "provider_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Service type",
                        "name": "service_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Provider country",
                        "name": "location_country",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IP type (residential, datacenter, etc.)",
                        "name": "ip_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Access policy. When empty, returns only public proposals (default). Use 'all' to return all.",
                        "name": "access_policy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Access policy source",
                        "name": "access_policy_source",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum compatibility. When empty, will not filter by it.",
                        "name": "compatibility_min",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum compatibility. When empty, will not filter by it.",
                        "name": "compatibility_max",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimal quality threshold. When empty will be defaulted to 0. Quality ranges from [0.0; 3.0]",
                        "name": "quality_min",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/ping": {
            "get": {
                "description": "Ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Ping",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/health.PingResponse"
                        }
                    }
                }
            }
        },
        "/prices": {
            "get": {
                "description": "Latest Prices",
                "tags": [
                    "prices"
                ],
                "summary": "Latest Prices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pricing.LatestPrices"
                            }
                        }
                    }
                }
            }
        },
        "/prices/config": {
            "get": {
                "description": "price config",
                "tags": [
                    "prices"
                ],
                "summary": "Price config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pricing.Config"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "update price config",
                "tags": [
                    "prices"
                ],
                "summary": "update price config",
                "parameters": [
                    {
                        "description": "config object",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pricing.Config"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    }
                }
            }
        },
        "/proposals": {
            "get": {
                "description": "List proposals",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "proposals"
                ],
                "summary": "List proposals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Consumer country",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Provider ID",
                        "name": "provider_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Service type",
                        "name": "service_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Provider country",
                        "name": "location_country",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IP type (residential, datacenter, etc.)",
                        "name": "ip_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Access policy. When empty, returns only public proposals (default). Use 'all' to return all.",
                        "name": "access_policy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Access policy source",
                        "name": "access_policy_source",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum compatibility. When empty, will not filter by it.",
                        "name": "compatibility_min",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum compatibility. When empty, will not filter by it.",
                        "name": "compatibility_max",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimal quality threshold. When empty will be defaulted to 0. Quality ranges from [0.0; 3.0]",
                        "name": "quality_min",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v3.Proposal"
                            }
                        }
                    }
                }
            }
        },
        "/proposals-metadata": {
            "get": {
                "description": "List proposals' metadata",
                "consumes": [
                    "application/json"
                ],
                "summary": "List proposals' metadata.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider ID",
                        "name": "provider_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/v3.Metadata"
                            }
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "Status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/health.StatusResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "health.PingResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "health.StatusResponse": {
            "type": "object",
            "properties": {
                "cache_ok": {
                    "type": "boolean"
                }
            }
        },
        "pricing.Config": {
            "type": "object",
            "properties": {
                "base_prices": {
                    "$ref": "#/definitions/pricing.PriceByTypeUSD"
                },
                "country_modifiers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/pricing.Modifier"
                    }
                }
            }
        },
        "pricing.LatestPrices": {
            "type": "object",
            "properties": {
                "current_server_time": {
                    "type": "string"
                },
                "current_valid_until": {
                    "type": "string"
                },
                "defaults": {
                    "$ref": "#/definitions/pricing.PriceHistory"
                },
                "per_country": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/pricing.PriceHistory"
                    }
                },
                "previous_valid_until": {
                    "type": "string"
                }
            }
        },
        "pricing.Modifier": {
            "type": "object",
            "properties": {
                "other": {
                    "type": "number"
                },
                "residential": {
                    "type": "number"
                }
            }
        },
        "pricing.Price": {
            "type": "object",
            "properties": {
                "price_per_gib": {
                    "type": "integer"
                },
                "price_per_gib_human_readable": {
                    "type": "number"
                },
                "price_per_hour": {
                    "type": "integer"
                },
                "price_per_hour_human_readable": {
                    "type": "number"
                }
            }
        },
        "pricing.PriceByType": {
            "type": "object",
            "properties": {
                "other": {
                    "$ref": "#/definitions/pricing.Price"
                },
                "residential": {
                    "$ref": "#/definitions/pricing.Price"
                }
            }
        },
        "pricing.PriceByTypeUSD": {
            "type": "object",
            "properties": {
                "other": {
                    "$ref": "#/definitions/pricing.PriceUSD"
                },
                "residential": {
                    "$ref": "#/definitions/pricing.PriceUSD"
                }
            }
        },
        "pricing.PriceHistory": {
            "type": "object",
            "properties": {
                "current": {
                    "$ref": "#/definitions/pricing.PriceByType"
                },
                "previous": {
                    "$ref": "#/definitions/pricing.PriceByType"
                }
            }
        },
        "pricing.PriceUSD": {
            "type": "object",
            "properties": {
                "price_per_gib_usd": {
                    "type": "number"
                },
                "price_per_hour_usd": {
                    "type": "number"
                }
            }
        },
        "v3.AccessPolicy": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "v3.Contact": {
            "type": "object",
            "properties": {
                "definition": {
                    "type": "object"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v3.Location": {
            "type": "object",
            "properties": {
                "asn": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "ip_type": {
                    "type": "string"
                },
                "isp": {
                    "type": "string"
                }
            }
        },
        "v3.Metadata": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "ip_type": {
                    "type": "string"
                },
                "isp": {
                    "type": "string"
                },
                "monitoring_failed": {
                    "type": "boolean"
                },
                "provider_id": {
                    "type": "string"
                },
                "service_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "whitelist": {
                    "type": "boolean"
                }
            }
        },
        "v3.Proposal": {
            "type": "object",
            "properties": {
                "access_policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v3.AccessPolicy"
                    }
                },
                "compatibility": {
                    "type": "integer"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v3.Contact"
                    }
                },
                "format": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "$ref": "#/definitions/v3.Location"
                },
                "provider_id": {
                    "type": "string"
                },
                "quality": {
                    "$ref": "#/definitions/v3.Quality"
                },
                "service_type": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v3.Quality": {
            "type": "object",
            "properties": {
                "bandwidth": {
                    "description": "Bandwidth in Mbps.",
                    "type": "number"
                },
                "latency": {
                    "description": "Latency in ms.",
                    "type": "number"
                },
                "monitoring_failed": {
                    "description": "MonitoringFailed did monitoring agent succeed to connect to the node.",
                    "type": "boolean"
                },
                "quality": {
                    "description": "Quality valuation from the oracle.",
                    "type": "number"
                },
                "uptime": {
                    "description": "Uptime in hours per day",
                    "type": "number"
                }
            }
        }
    }
}